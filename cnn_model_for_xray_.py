# -*- coding: utf-8 -*-
"""cnn model for xray .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IjTzbpt-9H0eI7BA0Mh6N73MZdQ_VR9F
"""

import tensorflow as tf
from tensorflow import keras
from keras import Sequential
from keras.layers import Dense , Conv2D , MaxPooling2D , Flatten

# import zipfile
# zip_path = "/content/chest_xray.zip"
# extract_path = "/content/chest_xray"  # You can choose any name for the folder
# # Extract the zip file
# with zipfile.ZipFile(zip_path, 'r') as zip_ref:
#     zip_ref.extractall(extract_path)
# print("âœ… Extraction complete!")

import kagglehub

# Download latest version
path = kagglehub.dataset_download("paultimothymooney/chest-xray-pneumonia")

print("Path to dataset files:", path)

t = keras.utils.image_dataset_from_directory(
    directory="/kaggle/input/chest-xray-pneumonia/chest_xray/test",
    labels="inferred",
    label_mode ='int',
    batch_size = 32,
    image_size = (256,256),
)
e = keras.utils.image_dataset_from_directory(
    directory="/kaggle/input/chest-xray-pneumonia/chest_xray/train",
    labels="inferred",
    label_mode ='int',
    batch_size = 32 ,
    image_size = (256,256),
 )

def process(image,label):
    image = tf.cast(image/255. ,tf.float32)
    return image,label
train = e.map(process)
test = t.map(process)

model = Sequential()

model.add(Conv2D(128,kernel_size=(3,3),padding="valid",activation='relu',input_shape=(256,256,3)))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding="valid"))

model.add(Conv2D(64,kernel_size=(3,3),padding="valid",activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding="valid"))

model.add(Conv2D(32,kernel_size=(3,3),padding="valid",activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2),strides=2,padding="valid"))

model.add(Flatten())

model.add(Dense(128,activation='relu'))
model.add(Dense(64,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(1,activation='sigmoid'))

model.compile(loss='binary_crossentropy',metrics=['accuracy'])

model.fit(t , epochs=10 , validation_data=e)

import cv2
import matplotlib.pyplot as plt
test = cv2.imread("/kaggle/input/chest-xray-pneumonia/chest_xray/val/PNEUMONIA/person1952_bacteria_4883.jpeg")
plt.imshow(test)

test.shape

test = cv2.resize(test,(256,256))
test = test.reshape(-1,256,256,3)

model.predict(test) # 0 for normal and 1 for patient have disease

