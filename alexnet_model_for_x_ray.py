# -*- coding: utf-8 -*-
"""alexnet_model_for_x_ray_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kosKOTakcE1bhnOM7Vhu8uIR8nXyJOqi
"""

import tensorflow as tf
from tensorflow import keras
from keras import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Activation ,Dropout

import kagglehub
path = kagglehub.dataset_download("paultimothymooney/chest-xray-pneumonia")
print("Path to dataset files:", path)

t = tf.keras.utils.image_dataset_from_directory(
    directory ="/kaggle/input/chest-xray-pneumonia/chest_xray/test",
    labels="inferred",
    label_mode="int",
    batch_size=32,
    image_size=(255,255)
)

e = tf.keras.utils.image_dataset_from_directory (
    directory ="/kaggle/input/chest-xray-pneumonia/chest_xray/train",
    labels="inferred",
    label_mode="int",
    batch_size=32,
    image_size=(255,255)
)

def process(image,label):
    image = tf.cast(image/255. ,tf.float32)
    return image,label
train = e.map(process)
test = t.map(process)

model = Sequential()
model.add(Conv2D(96, (11,11), strides=(4,4), activation='relu', input_shape=(227,227,3)))
model.add(MaxPooling2D(pool_size=(3,3), strides=(2,2)))

model.add(Conv2D(256, (5,5), strides=(1,1),padding="same", activation='relu'))
model.add(MaxPooling2D(pool_size=(3,3), strides=(2,2)))

model.add(Conv2D(384, (3,3) ,strides=(1,1), padding="same", activation='relu'))
model.add(Conv2D(384, (3,3),strides=(1,1), padding="same", activation='relu'))
model.add(Conv2D(256, (3,3),strides=(1,1), padding="same", activation='relu'))
model.add(MaxPooling2D(pool_size=(3,3), strides=(2,2)))

model.add(Flatten())
model.add(Dense(4096, activation='relu'))
# model.add(Dropout(0.5))
model.add(Dense(4096, activation='relu'))
# model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(optimizer="adam",loss='binary_crossentropy',metrics=['accuracy'])

model.fit(t , epochs=10, validation_data=e)

import cv2
import matplotlib.pyplot as plt
test = cv2.imread("/kaggle/input/chest-xray-pneumonia/chest_xray/val/NORMAL/NORMAL2-IM-1427-0001.jpeg")
plt.imshow(test)

test.shape

test = cv2.resize(test,(256,256))
test = test.reshape(-1,256,256,3)

test.shape

model.predict(test) # 1 for patient and 0 for normal have disease

